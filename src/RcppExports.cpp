// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// area_cpp
Rcpp::NumericVector area_cpp(NumericVector x, NumericVector y);
RcppExport SEXP _area_area_cpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(area_cpp(x, y));
    return rcpp_result_gen;
END_RCPP
}
// area_triangle_cpp
Rcpp::NumericVector area_triangle_cpp(NumericVector x, NumericVector y);
RcppExport SEXP _area_area_triangle_cpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(area_triangle_cpp(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_area_area_cpp", (DL_FUNC) &_area_area_cpp, 2},
    {"_area_area_triangle_cpp", (DL_FUNC) &_area_area_triangle_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_area(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
